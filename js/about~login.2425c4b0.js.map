{"version":3,"sources":["webpack:///./node_modules/vuetify/lib/components/VGrid/grid.js","webpack:///./node_modules/vuetify/lib/components/VGrid/VContainer.js","webpack:///./node_modules/vuetify/lib/util/mergeData.js"],"names":["VGrid","name","Vue","extend","functional","props","id","String","tag","type","default","render","h","data","children","staticClass","trim","attrs","classes","Object","keys","filter","key","value","startsWith","length","join","domProps","Grid","fluid","Boolean","mergeData","class","Array","concat","prop","event","mergeTarget","i","arguments","isArray","undefined","listeners"],"mappings":"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","file":"js/about~login.2425c4b0.js","sourcesContent":["// Types\nimport Vue from 'vue';\nexport default function VGrid(name) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n    functional: true,\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div'\n      }\n    },\n\n    render(h, {\n      props,\n      data,\n      children\n    }) {\n      data.staticClass = `${name} ${data.staticClass || ''}`.trim();\n      const {\n        attrs\n      } = data;\n\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {};\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false;\n          const value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n\n          if (key.startsWith('data-')) {\n            data.attrs[key] = value;\n            return false;\n          }\n\n          return value || typeof value === 'string';\n        });\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`;\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {};\n        data.domProps.id = props.id;\n      }\n\n      return h(props.tag, data, children);\n    }\n\n  });\n}\n//# sourceMappingURL=grid.js.map","import \"../../../src/components/VGrid/_grid.sass\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Grid from './grid';\nimport mergeData from '../../util/mergeData';\n/* @vue/component */\n\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    fluid: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children\n  }) {\n    let classes;\n    const {\n      attrs\n    } = data;\n\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {};\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false;\n        const value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n\n        if (key.startsWith('data-')) {\n          data.attrs[key] = value;\n          return false;\n        }\n\n        return value || typeof value === 'string';\n      });\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {};\n      data.domProps.id = props.id;\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'container',\n      class: Array({\n        'container--fluid': props.fluid\n      }).concat(classes || [])\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VContainer.js.map","/**\n * @copyright 2017 Alex Regan\n * @license MIT\n * @see https://github.com/alexsasharegan/vue-functional-data-merge\n */\nexport default function mergeData() {\n  const mergeTarget = {};\n  let i = arguments.length;\n  let prop;\n  let event; // Allow for variadic argument length.\n\n  while (i--) {\n    // Iterate through the data properties and execute merge strategies\n    // Object.keys eliminates need for hasOwnProperty call\n    for (prop of Object.keys(arguments[i])) {\n      switch (prop) {\n        // Array merge strategy (array concatenation)\n        case 'class':\n        case 'style':\n        case 'directives':\n          if (!Array.isArray(mergeTarget[prop])) {\n            mergeTarget[prop] = [];\n          } // Repackaging in an array allows Vue runtime\n          // to merge class/style bindings regardless of type.\n\n\n          mergeTarget[prop] = mergeTarget[prop].concat(arguments[i][prop]);\n          break;\n        // Space delimited string concatenation strategy\n\n        case 'staticClass':\n          if (!arguments[i][prop]) {\n            break;\n          }\n\n          if (mergeTarget[prop] === undefined) {\n            mergeTarget[prop] = '';\n          }\n\n          if (mergeTarget[prop]) {\n            // Not an empty string, so concatenate\n            mergeTarget[prop] += ' ';\n          }\n\n          mergeTarget[prop] += arguments[i][prop].trim();\n          break;\n        // Object, the properties of which to merge via array merge strategy (array concatenation).\n        // Callback merge strategy merges callbacks to the beginning of the array,\n        // so that the last defined callback will be invoked first.\n        // This is done since to mimic how Object.assign merging\n        // uses the last given value to assign.\n\n        case 'on':\n        case 'nativeOn':\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = {};\n          }\n\n          const listeners = mergeTarget[prop];\n\n          for (event of Object.keys(arguments[i][prop] || {})) {\n            // Concat function to array of functions if callback present.\n            if (listeners[event]) {\n              // Insert current iteration data in beginning of merged array.\n              listeners[event] = Array().concat( // eslint-disable-line\n              listeners[event], arguments[i][prop][event]);\n            } else {\n              // Straight assign.\n              listeners[event] = arguments[i][prop][event];\n            }\n          }\n\n          break;\n        // Object merge strategy\n\n        case 'attrs':\n        case 'props':\n        case 'domProps':\n        case 'scopedSlots':\n        case 'staticStyle':\n        case 'hook':\n        case 'transition':\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = {};\n          }\n\n          mergeTarget[prop] = { ...arguments[i][prop],\n            ...mergeTarget[prop]\n          };\n          break;\n        // Reassignment strategy (no merge)\n\n        case 'slot':\n        case 'key':\n        case 'ref':\n        case 'tag':\n        case 'show':\n        case 'keepAlive':\n        default:\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = arguments[i][prop];\n          }\n\n      }\n    }\n  }\n\n  return mergeTarget;\n}\n//# sourceMappingURL=mergeData.js.map"],"sourceRoot":""}